void main(List<String> arguments) {
  /* 변수를 선언하는 방법 (var keyword) 
     1. var 을 붙인다. - 자료형은 넣은값에따라 지정되며, 추후 다른 데이터를 넣으면 오류가 발생.
     2. 데이터 타입을 명시한다. : Java, C, TypeScript 등등 과 똑같다.

     var 는 함수, 메소드 내부에 지역변수를 사용할 때 관습적으로 사용한다.
     class 내부에서 변수나 프로퍼티를 선언할때는 데이터 타입을 명시한다.
  */
  /* Dynamic keyword 
     var 로 선언 시 초기값을 할당해주지 않거나 'dynamic' 키워드를 앞에 붙이면
     선언된다. 

     어떤 데이터 타입을 넣든 오류가 발생하지않음. (JS 와 같음.)
     dynamic 타입의 메소드는 많지않음.(데이터 타입을 모르기때문)
     
     만약 조건문으로 데이터 형을 체크한다면 조건문 내부에선 해당 데이터 타입이 무엇인지 dart가 알게됨. (각 데이터타입의 메소드 사용가능.)
     조건문 밖에서는 매번 타입을 체크해 줄 필요가 있음.

     외부에서 받아온 데이터의 타입을 모를때 dynamic 으로 받고 데이터 타입을
     체크해줄 수 있음.
  */
  /* Null Safety
     Dart 에서 제공하는 유용한기능. 개발자가 작성한 함수 또는 여러 기능에서 
     null 값을 참조하면 에러가 발생하는 경우도 있음. 

     그렇다고 null 을 아예 사용하지 못하게 하는건 바람직하지않음. 
     null 은 빈값을 체크 하는등에 매우 유용하기 때문임. 

     따라서 Dart 는 Nullable Variables 라는 문법을 만듬. 
     선언시 데이터 타입 옆에 '?' 를 붙여주면, 해당 변수는 
     지정한 데이터 타입이 올 수 있거나 null 이 올 수 있음.
  */
  // String? nico = 'nico';
  // nico = null;
  // nico?.isNotEmpty;

  print("hello, world!");
}
